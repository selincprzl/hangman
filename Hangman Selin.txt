using System;
using System.Collections.Generic;
using static System.Random;
using System.Text;

namespace HangMan
{
    internal class Program
    {
        //A method to print the hangman
        private static void printHangman(int wrong)

        {
            //if there is no wrong letter, the program will print this
            if (wrong == 0)
            {
                Console.WriteLine("+---+");
                Console.WriteLine("    |");
                Console.WriteLine("    |");
                Console.WriteLine("    |");
                Console.WriteLine("   ===");
            }
            //if 1 wrong, the head of the hangman will come up
            else if (wrong == 1)
            {
                Console.WriteLine("+---+");
                Console.WriteLine("O   |");
                Console.WriteLine("    |");
                Console.WriteLine("    |");
                Console.WriteLine("    ===");

            }
            //if 2 letters wrong, the body of the hangman will come up
            else if (wrong == 2)
            {
                Console.WriteLine("+---+");
                Console.WriteLine("O    |");
                Console.WriteLine("|    |");
                Console.WriteLine("     |");
                Console.WriteLine("    ===");
            }
            //if 3 letters wrong, one of the arms will come up
            else if (wrong == 3)
            {
                Console.WriteLine("+---+");
                Console.WriteLine(" O   |");
                Console.WriteLine("/|   |");
                Console.WriteLine("     |");
                Console.WriteLine("    ===");

            }
            //if 4 wrong, the other arm will come up
            else if (wrong == 4)
            {
                Console.WriteLine("+---+");
                Console.WriteLine(" O   |");
                Console.WriteLine("/|\\  |");
                Console.WriteLine("     |");
                Console.WriteLine("    ===");
            }
            //if 5 wrong, one of the legs will come up
            else if (wrong == 5) {
                Console.WriteLine("+---+");
                Console.WriteLine(" O   |");
                Console.WriteLine("/|\\  |");
                Console.WriteLine("/    |");
                Console.WriteLine("    ===");

            }
            //if 6 wrong, the other leg will come up
            else if (wrong == 6)
            {
                Console.WriteLine("+---+");
                Console.WriteLine(" O  |");
                Console.WriteLine("/|\\ |");
                Console.WriteLine("/ \\ |");
                Console.WriteLine("    ===");

            }

        }
        //another method to print out the word
        private static int printWord(List<char> guessedLetters, String randomWord)
            {
            //a counter to iterate the random word
                int counter = 0;
            //an int for the number of the letters that the users has guessed correctly
                int rightLetters = 0;
                Console.WriteLine("\r \n ");

            //allows us to iterate through each character inside the string of the random word we genareted in the begginning of the game
                foreach (char c in randomWord)
                {
                //checks the if the character is inside the guessed letters, if yes so it prints it out.
                    if (guessedLetters.Contains(c))
                    {

                        Console.Write (c + " ");
                        rightLetters++;
                    }

                    //if its not inside the guessed letters, so the program will print out a space.
                    else
                        {

                            Console.WriteLine(" ");
                        }
                    counter++;


                }
                return rightLetters;
            }

        //another method to print out the lines below the words
        private static void printLines (String randomWord)
        {
             
            Console.Write("\r");
            foreach (char c in randomWord)
            {
                //prints out the special overlined character right below the letters
                Console.OutputEncoding = System.Text.Encoding.Unicode;
                Console.Write("\u0305");

            }
        }

        //main method 
            static void Main(string[] args)
            {
            //Welcome text when u come in the page
            Console.WriteLine("------------------------------");
            Console.WriteLine("Hello, Welcome to Hangman");
            Console.WriteLine("------------------------------");

            //Creating a random word
            Random random = new Random();

            //list of random words
            List<String> wordDictionary = new List<string> { "coding", "computer", "icecream", "sunflower","hello" };

            //generating a random number between 0 and whatever the amount of words there is in the dictionary up.
            int index = random.Next(wordDictionary.Count);

            //creating the random word
            string randomWord= wordDictionary[index];

            //creating the dashlines so the user knows how many character there is
            foreach (char c in randomWord)
            {
                Console.Write(" _ ");

            }

            //Length of the word the user has to guess
            int lengthOfWordToGuess = randomWord.Length;
            int amountOfTimesWrong = 0;

            //list of the letters that has been guessed
            List<char> currentLettersGuessed = new List<char>();
            //the correct letters that user have guessed
            int currentLettersRight = 0;
            
            //Looping while the game is on, the game keeps going as long as  the amount of time is not 6 or the user havent guessed the entire word
            while (amountOfTimesWrong != 6 && currentLettersRight != lengthOfWordToGuess)
            {
                //Letters that has been guessed so far
                Console.Write("\n Letters guessed so far: ");

                //Itarating through array list of letters, every character we want to print out for the user
                foreach (char letter in currentLettersGuessed)
                {
                    Console.Write(letter + " ");

                }
                //Prompt  user for input
                Console.Write("\n Guess a letter: ");

                //collecting the guessed letter from the user
                char letterGuessed = Console.ReadLine()[0];

                //checks if the letters has already been guessed 
                if (currentLettersGuessed.Contains(letterGuessed))
                {
                    Console.Write("\r \nYou have already guessed this letter");

                    //prints out the hangman
                    printHangman(amountOfTimesWrong);
                    //if the user has guessed some of the letters, it will still be on the screen
                    currentLettersRight = printWord(currentLettersGuessed, randomWord);

                    //printing out the dash lines
                    printLines(randomWord);

                }
                //if they havent guessed the letter already 
                else
                {
                    //check if latter is in the word
                    bool right = false;
                  
                    for (int i = 0; i < randomWord.Length; i++)
                        
                        if (letterGuessed == randomWord[i])
                        {
                            right = true;
                        }

                    //if right is true prints the hangman, correct guessed letters, and the random word that has to be guessed
                    if (right)
                    {
                        printHangman(amountOfTimesWrong);
                        currentLettersGuessed.Add(letterGuessed);
                        currentLettersRight=printWord(currentLettersGuessed, randomWord);
                       
                    }
                    //if the user is wrong, prints out the hangman with the amount of times the user is wrong
                    else
                    {

                        amountOfTimesWrong++;
                        currentLettersGuessed.Add(letterGuessed);
                        printHangman(amountOfTimesWrong);
                        currentLettersRight = printWord(currentLettersGuessed, randomWord);
                        

                    }
                }

            }
            Console.WriteLine("Game is over. Thanks for playing :)");
            }



        








    }
}
